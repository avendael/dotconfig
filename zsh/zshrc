# History
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_SAVE_NO_DUPS
setopt INC_APPEND_HISTORY
setopt HIST_REDUCE_BLANKS
setopt HIST_IGNORE_SPACE

# fasd
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
eval "$(fasd --init auto)"

# Load plugins
if [ "$(uname)" = 'Darwin' ]; then
    export ZPLUG_HOME=/usr/local/opt/zplug
    source $ZPLUG_HOME/init.zsh
else
    source /usr/share/zplug/init.zsh
fi

MNML_USER_CHAR='â‚¿'

zplug "mafredri/zsh-async", from:github
zplug "subnixr/minimal", use:minimal.zsh, from:github, as:theme
zplug "unixorn/warhol.plugin.zsh"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-syntax-highlighting", defer:2

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi
zplug load

# keybindings
bindkey -M emacs '^P' history-substring-search-up
bindkey -M emacs '^N' history-substring-search-down
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# fzf
export FZF_TMUX=1
export FZF_DEFAULT_OPTS='--reverse --inline-info --ansi --color=light'
export FZF_DEFAULT_COMMAND='ag -g "" --hidden'
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

# nvm
export NVM_LAZY_LOAD=true
export NVM_NO_USE=true
export NVM_AUTO_USE=true

# aliases
alias vim="nvim"
alias vimdiff=nvim -d
alias g=git
alias gpg-restart="gpgconf --kill gpg-agent && gpgconf --launch gpg-agent"

# man
man() {
    env \
        LESS_TERMCAP_mb=$(printf "\e[1;31m") \
        LESS_TERMCAP_md=$(printf "\e[1;31m") \
        LESS_TERMCAP_me=$(printf "\e[0m") \
        LESS_TERMCAP_se=$(printf "\e[0m") \
        LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
        LESS_TERMCAP_ue=$(printf "\e[0m") \
        LESS_TERMCAP_us=$(printf "\e[1;32m") \
            man "$@"
}

# pyenv
if type pyenv &> /dev/null; then
    eval "$(pyenv init -)"
fi

if [ -f ~/.config/secrets.sh ]; then
    source ~/.config/secrets.sh
fi

if [ -f ~/.cargo/env ]; then
    source $HOME/.cargo/env
fi


# MacOS
if [ "$(uname)" = 'Darwin' ]; then
    # Iterm2
    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

    # Java
    export PATH_TO_FX=/Library/Java/Extensions/javafx-sdk-11.0.2/lib

    # GPG
    export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

    # Path
    export HOMEBREW_PREFIX="/usr/local"
    export MINICONDA_HOME="${HOMEBREW_PREFIX}/miniconda3"
    export PYTHON_HOME="${HOME}/Library/Python/2.7"
    export PATH="${HOME}/.local/bin:/usr/local/sbin:$PATH:${MINICONDA_HOME}/bin:${PYTHON_HOME}/bin:${HOME}/.cargo/bin"
fi

# WSL2
winhome=$(cmd.exe /c "<nul set /p=%UserProfile%" 2>/dev/null || true)
export WSL_WIN_HOME="$(wslpath -u "$winhome")"